<controls:MetroWindow x:Class="SudokuSolution.Wpf.Views.Solved.SolvedWindow"
					  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
					  xmlns:command="http://www.galasoft.ch/mvvmlight"
					  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					  xmlns:local="clr-namespace:SudokuSolution.Wpf.Views.Solved"
					  xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
					  xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
					  xmlns:behaviors="clr-namespace:SudokuSolution.Wpf.Common.Behaviors;assembly=SudokuSolution.Wpf.Common"
					  xmlns:converters="clr-namespace:SudokuSolution.Wpf.Common.Converters;assembly=SudokuSolution.Wpf.Common"
					  xmlns:wpfControls="clr-namespace:SudokuSolution.Wpf.Common.Controls;assembly=SudokuSolution.Wpf.Common"
					  mc:Ignorable="d"
					  WindowStyle="None"
					  ResizeMode="CanMinimize"
					  ShowTitleBar="False"
					  ShowMaxRestoreButton="False"
					  WindowStartupLocation="CenterScreen"
					  SizeToContent="WidthAndHeight"
					  MaxWidth="700"
					  MaxHeight="700"
					  Title="{Binding Header}"
					  x:Name="ThisWindow"
					  d:DataContext="{DynamicResource DemoModel}">

	<controls:MetroWindow.Resources>
		<local:DemoModel x:Key="DemoModel" />
	</controls:MetroWindow.Resources>

	<i:Interaction.Behaviors>
		<behaviors:DragMoveBehavior />
	</i:Interaction.Behaviors>

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Loaded">
			<command:EventToCommand Command="{Binding LoadedCommand, Mode=OneWay}" />
		</i:EventTrigger>
		<i:EventTrigger EventName="ContentRendered">
			<command:EventToCommand Command="{Binding ContentRenderedCommand, Mode=OneWay}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<StackPanel Grid.Row="0" Margin="10,10,0,0" Orientation="Horizontal" HorizontalAlignment="Left">
			<TextBlock>
				<TextBlock.Text>
					<MultiBinding StringFormat="Решение {0} из {1}">
						<Binding Path="CurrentSolved" Mode="OneWay" />
						<Binding Path="TotalSolvedCount" Mode="OneWay" TargetNullValue="?" />
					</MultiBinding>
				</TextBlock.Text>
			</TextBlock>
		</StackPanel>

		<ScrollViewer Grid.Row="1"
					  Margin="20,20,20,20"
					  HorizontalAlignment="Center"
					  VerticalScrollBarVisibility="Auto"
					  HorizontalScrollBarVisibility="Auto">
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="MouseMove">
					<command:EventToCommand Command="{Binding HandleMouseMoveCommand, Mode=OneWay}" PassEventArgsToCommand="True" />
				</i:EventTrigger>
			</i:Interaction.Triggers>

			<ContentPresenter Content="{Binding FieldViewModel.TypedView}" />
		</ScrollViewer>

		<Grid Grid.Row="2" Margin="5,0,5,5">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
				<ColumnDefinition Width="Auto"></ColumnDefinition>
			</Grid.ColumnDefinitions>

			<Button Grid.Column="0" Width="100" Command="{Binding PrevSolvedCommand, Mode=OneWay}">
				<StackPanel Orientation="Horizontal">
					<iconPacks:PackIconFontAwesome
						Kind="AngleDoubleLeftSolid"
						Width="12"
						Height="12"
						VerticalAlignment="Center" />
					<TextBlock Margin="6,0,0,0" Text="Предыдущее" />
				</StackPanel>
			</Button>
			<Button Grid.Column="2" Width="100" Command="{Binding NextSolvedCommand, Mode=OneWay}">
				<StackPanel Orientation="Horizontal">
					<TextBlock Margin="0,0,6,0" Text="Следующее" />
					<iconPacks:PackIconFontAwesome
						Kind="AngleDoubleRightSolid"
						Width="12"
						Height="12"
						VerticalAlignment="Center" />
				</StackPanel>
			</Button>
		</Grid>

		<Grid Grid.Row="0"
			  Grid.Column="0"
			  Grid.RowSpan="3"
			  Background="#c4000000"
			  Visibility="{Binding IsBusy, Converter={converters:BoolToVisibilityConverter}, Mode=OneWay}">
			<wpfControls:CircleSpinner HorizontalAlignment="Center"
									   VerticalAlignment="Center" />
		</Grid>
	</Grid>
</controls:MetroWindow>